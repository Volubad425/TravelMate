// Generated by view binder compiler. Do not edit!
package com.example.travelmateapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.travelmateapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMapsBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final EditText etSearch;

  @NonNull
  public final Button hotelbtn;

  @NonNull
  public final Button loisirbtn;

  @NonNull
  public final Button parcbtn;

  @NonNull
  public final Button restaurantbtn;

  @NonNull
  public final Button shopbtn;

  private ActivityMapsBinding(@NonNull View rootView, @NonNull EditText etSearch,
      @NonNull Button hotelbtn, @NonNull Button loisirbtn, @NonNull Button parcbtn,
      @NonNull Button restaurantbtn, @NonNull Button shopbtn) {
    this.rootView = rootView;
    this.etSearch = etSearch;
    this.hotelbtn = hotelbtn;
    this.loisirbtn = loisirbtn;
    this.parcbtn = parcbtn;
    this.restaurantbtn = restaurantbtn;
    this.shopbtn = shopbtn;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_maps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et_search;
      EditText etSearch = ViewBindings.findChildViewById(rootView, id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.hotelbtn;
      Button hotelbtn = ViewBindings.findChildViewById(rootView, id);
      if (hotelbtn == null) {
        break missingId;
      }

      id = R.id.loisirbtn;
      Button loisirbtn = ViewBindings.findChildViewById(rootView, id);
      if (loisirbtn == null) {
        break missingId;
      }

      id = R.id.parcbtn;
      Button parcbtn = ViewBindings.findChildViewById(rootView, id);
      if (parcbtn == null) {
        break missingId;
      }

      id = R.id.restaurantbtn;
      Button restaurantbtn = ViewBindings.findChildViewById(rootView, id);
      if (restaurantbtn == null) {
        break missingId;
      }

      id = R.id.shopbtn;
      Button shopbtn = ViewBindings.findChildViewById(rootView, id);
      if (shopbtn == null) {
        break missingId;
      }

      return new ActivityMapsBinding(rootView, etSearch, hotelbtn, loisirbtn, parcbtn,
          restaurantbtn, shopbtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
